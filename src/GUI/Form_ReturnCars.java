package GUI;

import Classes.Booking;
import Classes.Brand;
import Classes.Car;
import Classes.Customer;
import Classes.DB;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Saipo
 */


public class Form_ReturnCars extends javax.swing.JFrame {
    
    
    Classes.Booking booking = new Classes.Booking();
    Booking book = new Booking();
    ArrayList<Classes.Booking> book_list = booking.bookingList();
    Car car = new Car();
    public Form_ReturnCars() {
        initComponents();
        populateJtableWithBooking();
        this.setLocationRelativeTo(null);
        
        // Assuming buttonGroup1 contains the radio buttons 'withDamageRadioButton' and 'withoutDamageRadioButton'
        jRadioButton_with_Damage.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
            // Show damage fee spinner when 'With Damage' is selected
            jSpinner_damage_Fee.setVisible(true);
            }
        });

        jRadioButton_without_Damage.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
            // Hide damage fee spinner when 'Without Damage' is selected
            jSpinner_damage_Fee.setVisible(false);
            }
        });

        
    }

    
    public void populateJtableWithBooking() {
    // Get the list of bookings
    ArrayList<Classes.Booking> booking_list = booking.bookingList();

    // Debugging: print the number of bookings fetched
    System.out.println("Number of bookings: " + booking_list.size());

    String[] columnsName = {"car id","booking id", "Car Model", "Customer Name", "Start Date", "End Date", "Total Price", "Driver", "Driver Name", "Plate Number"};

    // If there are no bookings, show a message and clear the table
    if (booking_list.isEmpty()) {
        JOptionPane.showMessageDialog(null, "No bookings to display!", "Information", JOptionPane.INFORMATION_MESSAGE);
        jTable_unavailable_vehicle_.setModel(new DefaultTableModel(new Object[0][columnsName.length], columnsName));
        return;
    }

    // Prepare the rows for the table
    Object[][] rows = new Object[booking_list.size()][columnsName.length];
    for (int i = 0; i < booking_list.size(); i++) {
        Classes.Booking booking = booking_list.get(i);
        
        // Get Car Model (assuming you have a method to fetch the car by ID)
        
        car = car.getCarById(booking.getCar_id());  // Assuming the booking has car_id
        String carModel = car != null ? car.getModel() : "Unknown";
        String plateNumber = car != null ? car.getplateNum_() : "Unknown";
        
        // Get Customer Name (assuming you have a method to fetch the customer by ID)
        Customer customer = new Customer();
        customer = customer.getCustomerById(booking.getCustomer_id());  // Assuming the booking has customer_id
        String customerName = customer != null ? customer.getFullname(): "Unknown";

        // Get Driver Name (assuming the driver is a reference or ID that you can fetch)
        String driverName = booking.getDriverName();
        if (booking.getDriver().equals("With Driver") && driverName != null) {
            driverName = driverName; // use driverName if available
        } else {
            driverName = "Self Drive";
        }

        // Populate rows for the table
        rows[i][0] = car.getId();
        rows[i][1] = booking.getId();
        rows[i][2] = carModel;           // Car Model
        rows[i][3] = customerName;       // Customer Name
        rows[i][4] = booking.getStart_date();   // Start Date
        rows[i][5] = booking.getEnd_date();     // End Date
        rows[i][6] = booking.getTotal_price();  // Total Price
        rows[i][7] = booking.getDriver();       // Driver (Self Drive / With Driver)
        rows[i][8] = driverName;   // Driver Name
        rows[i][9] = plateNumber;
    }
    // Set table model with the updated rows
    jTable_unavailable_vehicle_.setModel(new DefaultTableModel(rows, columnsName));
}   
    
    
    
    
    
    
    



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel_brands_logo = new javax.swing.JLabel();
        jLabel_close1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_unavailable_vehicle_ = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSpinner_carId = new javax.swing.JSpinner();
        jTextField_plateNumber = new javax.swing.JTextField();
        jButton_Previous = new javax.swing.JButton();
        jButton_First = new javax.swing.JButton();
        jButton_Next = new javax.swing.JButton();
        jButton_Last = new javax.swing.JButton();
        jButton_confirm_returnment = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jDateChooser_retrunmentDate = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea_Vehicle_report = new javax.swing.JTextArea();
        jRadioButton_without_Damage = new javax.swing.JRadioButton();
        jRadioButton_with_Damage = new javax.swing.JRadioButton();
        jSpinner_damage_Fee = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(1142, 592));

        jPanel3.setBackground(new java.awt.Color(255, 212, 60));

        jLabel4.setBackground(java.awt.Color.black);
        jLabel4.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Return Vehicle");

        jLabel_brands_logo.setBackground(java.awt.Color.black);

        jLabel_close1.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jLabel_close1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_close1.setText("X");
        jLabel_close1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_close1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_close1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_brands_logo, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(317, 317, 317)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel_close1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_brands_logo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel_close1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 23, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTable_unavailable_vehicle_.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable_unavailable_vehicle_.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable_unavailable_vehicle_.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_unavailable_vehicle_MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_unavailable_vehicle_);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("ID:");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel2.setText("plate Number:");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel3.setText("Date of Returnment:");

        jSpinner_carId.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N

        jTextField_plateNumber.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N

        jButton_Previous.setBackground(new java.awt.Color(255, 212, 60));
        jButton_Previous.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton_Previous.setText("<");
        jButton_Previous.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_PreviousActionPerformed(evt);
            }
        });

        jButton_First.setBackground(new java.awt.Color(255, 212, 60));
        jButton_First.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton_First.setText("<<");
        jButton_First.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_First.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_FirstActionPerformed(evt);
            }
        });

        jButton_Next.setBackground(new java.awt.Color(255, 212, 60));
        jButton_Next.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton_Next.setText(">");
        jButton_Next.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_NextActionPerformed(evt);
            }
        });

        jButton_Last.setBackground(new java.awt.Color(255, 212, 60));
        jButton_Last.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton_Last.setText(">>");
        jButton_Last.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LastActionPerformed(evt);
            }
        });

        jButton_confirm_returnment.setBackground(new java.awt.Color(255, 212, 60));
        jButton_confirm_returnment.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton_confirm_returnment.setForeground(new java.awt.Color(255, 255, 255));
        jButton_confirm_returnment.setText("Confirm Returnment");
        jButton_confirm_returnment.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_confirm_returnment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_confirm_returnmentActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel6.setText("Vehicle Report/ Status:");

        jTextArea_Vehicle_report.setColumns(20);
        jTextArea_Vehicle_report.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jTextArea_Vehicle_report.setRows(5);
        jScrollPane2.setViewportView(jTextArea_Vehicle_report);

        buttonGroup1.add(jRadioButton_without_Damage);
        jRadioButton_without_Damage.setText("Withouot Damage");
        jRadioButton_without_Damage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_without_DamageActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton_with_Damage);
        jRadioButton_with_Damage.setText("With Damage");
        jRadioButton_with_Damage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_with_DamageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_plateNumber)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jSpinner_carId, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 3, Short.MAX_VALUE))
                            .addComponent(jDateChooser_retrunmentDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel6))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jRadioButton_without_Damage)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButton_with_Damage, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jSpinner_damage_Fee)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_First, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_Next, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_Previous, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_Last, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jButton_confirm_returnment, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_Last, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_Previous, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_Next, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_First, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSpinner_carId)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_plateNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jDateChooser_retrunmentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton_without_Damage)
                            .addComponent(jRadioButton_with_Damage)
                            .addComponent(jSpinner_damage_Fee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)))
                .addComponent(jButton_confirm_returnment, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1071, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel_close1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_close1MouseClicked
        // TODO add your handling code here:
        this.dispose();
        // frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }//GEN-LAST:event_jLabel_close1MouseClicked

    private void jTable_unavailable_vehicle_MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_unavailable_vehicle_MouseClicked
        
        int index = jTable_unavailable_vehicle_.getSelectedRow();
        
        String PlateNumber = jTable_unavailable_vehicle_.getValueAt(index, 9).toString();
        
        
        int id = Integer.valueOf(jTable_unavailable_vehicle_.getValueAt(index, 1).toString());
        jSpinner_carId.setValue(id);
        
        jTextField_plateNumber.setText(PlateNumber);
        
        Date bdate;  
        try {
            bdate = new SimpleDateFormat("yyyy-MM-dd").parse(jTable_unavailable_vehicle_.getValueAt(index, 4).toString());
            jDateChooser_retrunmentDate.setDate(bdate);
        } catch (ParseException ex) {
            java.util.logging.Logger.getLogger(Form_Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jTable_unavailable_vehicle_MouseClicked

    private void jButton_PreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_PreviousActionPerformed
   
    }//GEN-LAST:event_jButton_PreviousActionPerformed

    private void jButton_FirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_FirstActionPerformed
      
    }//GEN-LAST:event_jButton_FirstActionPerformed

    private void jButton_NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_NextActionPerformed
     
    }//GEN-LAST:event_jButton_NextActionPerformed

    private void jButton_LastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LastActionPerformed
    
    }//GEN-LAST:event_jButton_LastActionPerformed

    private void jButton_confirm_returnmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_confirm_returnmentActionPerformed
        
       
        String plateNumber = jTextField_plateNumber.getText().trim();
Date returnDate = jDateChooser_retrunmentDate.getDate();

if (plateNumber.isEmpty() || returnDate == null) {
    JOptionPane.showMessageDialog(null, "Please fill in all the required fields!", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

int selectedRow = jTable_unavailable_vehicle_.getSelectedRow();
if (selectedRow == -1) {
    JOptionPane.showMessageDialog(null, "Please select a car to return!", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

// Get car ID from selected row (assume it's in the first column)
int carId = Integer.parseInt(jTable_unavailable_vehicle_.getValueAt(selectedRow, 0).toString());
int id = Integer.parseInt(jTable_unavailable_vehicle_.getValueAt(selectedRow, 1).toString());
System.out.println(carId);

// Check if the "Without Damage" radio button is selected
if (jRadioButton_without_Damage.isSelected()) {
    // Update car status to available
    car.updateCarStatus(carId, "available");  // Assuming car.updateCarStatus() method marks the car as available
    book.updateBookStatus(id);  // Assuming updateBookStatus() method updates booking status to "returned"
    
    // Optional: Display a report indicating successful return
    String vehicleReport = "Car with plate number: " + plateNumber + " has been returned successfully.";
    jTextArea_Vehicle_report.setText(vehicleReport);  // Display the report
    
    // Clear the form fields
    jTextField_plateNumber.setText("");
    jDateChooser_retrunmentDate.setDate(null);
    populateJtableWithBooking();  // Repopulate the table to reflect non-damaged cars
} else {
    // Handle the case where the car is returned with damage
    int damageFee = (int) jSpinner_damage_Fee.getValue();  // Get damage fee entered by user
    int totalPrice = 0;
    
    // Add the damage fee to the total price
    double TotalPrice = booking.getTotal_price() + damageFee;  // Update total price (including the damage fee)
    booking.setTotal_price(totalPrice);  // Set the updated price
    
    // Optional: Display a damage report
    String damageReport = "Car with plate number: " + plateNumber + " has been returned with damage. Damage fee: " + damageFee + ".";
    jTextArea_Vehicle_report.setText(damageReport);  // Display the damage report
    
    // Update the car's status to unavailable (damaged or under maintenance)
    car.updateCarStatus(carId, "maintenance");  // Mark the car as damaged (unavailable)

    // Add the damaged car's details to the "Damaged Cars" table
    Form_DamagedCars dmgcrs = new Form_DamagedCars();
    dmgcrs.addToDamagedCarsTable(carId, plateNumber, damageFee);  // Add damaged car data to the damaged cars table
    
    // Clear the form fields
    jTextField_plateNumber.setText("");
    jDateChooser_retrunmentDate.setDate(null);
    jSpinner_damage_Fee.setValue(0);  // Reset the damage fee spinner
    populateJtableWithBooking();  // Repopulate the table with non-damaged cars
}


// Method to add car to the damaged cars table


        
        
        
        
        
        
        
        
        // OKAY TO
//        String plateNumber = jTextField_plateNumber.getText().trim();
//Date returnDate = jDateChooser_retrunmentDate.getDate();
//
//if (plateNumber.isEmpty() || returnDate == null) {
//    JOptionPane.showMessageDialog(null, "Please fill in all the required fields!", "Error", JOptionPane.ERROR_MESSAGE);
//    return;
//}
//
//int selectedRow = jTable_unavailable_vehicle_.getSelectedRow();
//if (selectedRow == -1) {
//    JOptionPane.showMessageDialog(null, "Please select a car to return!", "Error", JOptionPane.ERROR_MESSAGE);
//    return;
//}
//
//// Get car ID from selected row (assume it's in the first column)
//int carId = Integer.parseInt(jTable_unavailable_vehicle_.getValueAt(selectedRow, 0).toString());
//int id = Integer.parseInt(jTable_unavailable_vehicle_.getValueAt(selectedRow, 1).toString());
//System.out.println(carId);
//
//// Update the car's status to available
//if (jRadioButton_without_Damage.isSelected()){
//    // Update car status to available
//    
//    int confirm = JOptionPane.showConfirmDialog(null, "Are you sure You want to Return this Vehicle?" , "Confirm" , JOptionPane.YES_NO_OPTION);
//        if (confirm == JOptionPane.YES_OPTION){
//            
//            car.updateCarStatus(carId, true);
//    book.updateBookStatus(id);
//    
//    // Optional: Display a report
//    String vehicleReport = "Car with plate number: " + plateNumber + " has been returned successfully.";
//    jTextArea_Vehicle_report.setText(vehicleReport);
//    
//    // Clear form fields
//    jTextField_plateNumber.setText("");
//    jDateChooser_retrunmentDate.setDate(null);
//    populateJtableWithBooking();
//            
//            
//        }
//    
//    
//    
//    
//} else {
//    
//    JOptionPane.showMessageDialog(null, "Please Fill the form!", "Error", JOptionPane.ERROR_MESSAGE);
//    // Handle damage report
//    int damageFee = (int) jSpinner_damage_Fee.getValue();
//    
//    // Add the damage fee to the booking's total price
//    damageFee += booking.getTotal_price();
//    
//    // Update booking with the new total price (including damage fee)
//    booking.setTotal_price(damageFee);
//    
//    // Optional: Display a damage report
//    String damageReport = "Car with plate number: " + plateNumber + " has been returned with damage. Damage fee: " + damageFee + ".";
//    jTextArea_Vehicle_report.setText(damageReport);
//    
//    // Update the car's status to unavailable or under maintenance (if needed)
//    car.updateCarStatus(carId, false);
//    
//    // Optionally, update the booking or vehicle records in the database if necessary
//    // You might want to update the database here (e.g., setting status, updating payment)
//    // For example: car.updateCarStatusInDB(carId, false);
//    
//    // Clear form fields
//    jTextField_plateNumber.setText("");
//    jDateChooser_retrunmentDate.setDate(null);
//    jSpinner_damage_Fee.setValue(0); // Reset damage fee spinner
//    //populateJtableWithBooking();
//}

        
        
        
        
        
        
        
        
        
        
        
        
//        String plateNumber = jTextField_plateNumber.getText().trim();
//        Date returnDate = jDateChooser_retrunmentDate.getDate();
//
//        if (plateNumber.isEmpty() || returnDate == null) {
//            JOptionPane.showMessageDialog(null, "Please fill in all the required fields!", "Error", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
//
//        int selectedRow = jTable_unavailable_vehicle_.getSelectedRow();
//        if (selectedRow == -1) {
//            JOptionPane.showMessageDialog(null, "Please select a car to return!", "Error", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
//
//    
//        // Get car ID from selected row (assume it's in the first column)
//        int carId = Integer.parseInt(jTable_unavailable_vehicle_.getValueAt(selectedRow, 0).toString());
//        int id = Integer.parseInt(jTable_unavailable_vehicle_.getValueAt(selectedRow, 1).toString());
//        System.out.println(carId);
//        // Update the car's status to available
//        
//        if (jRadioButton_without_Damage.isSelected()){
//        car.updateCarStatus(carId, true);
//        book.updateBookStatus(id);
//        
//        
//        // Optional: Display a report
//        String vehicleReport = "Car with plate number: " + plateNumber + " has been returned successfully.";
//        jTextArea_Vehicle_report.setText(vehicleReport);
//        
//        // Clear form fields
//        jTextField_plateNumber.setText("");
//        jDateChooser_retrunmentDate.setDate(null);
//        populateJtableWithBooking();
//        }
//        else {
//  
//            int damageFee = (int)(jSpinner_damage_Fee.getValue());
//            
//            damageFee += booking.getTotal_price();
//            // JOptionPane.showMessageDialog(null, "Fill up Vehicle Report/ Status", "Error", JOptionPane.ERROR_MESSAGE);
//        } 
//        
//        
        
        
        
        
                
//        int index = jTable_unavailable_vehicle_.getSelectedRow();
//        
//   
//        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
//    String pickup_date = dateFormat.format(jTable_unavailable_vehicle_.getValueAt(index, 3).toString());
//    String dropoff_date = dateFormat.format(jTable_unavailable_vehicle_.getValueAt(index, 4).toString());
//
//    Date pickupDate = dateFormat.parse(pickup_date);
//    Date dropoffDate = dateFormat.parse(dropoff_date);
//        long diffInMillis = dropoffDate.getTime() - pickupDate.getTime();
//        long diffInDays = TimeUnit.DAYS.convert(diffInMillis, TimeUnit.MILLISECONDS);
//    if (diffInDays <= 0) {
//        JOptionPane.showMessageDialog(null, "Invalid rental period. Drop-off date must be after the pick-up date.");
//        return;
//    }
        

    
    }//GEN-LAST:event_jButton_confirm_returnmentActionPerformed

    private void jRadioButton_without_DamageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_without_DamageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_without_DamageActionPerformed

    private void jRadioButton_with_DamageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_with_DamageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_with_DamageActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form_ReturnCars.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form_ReturnCars.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form_ReturnCars.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form_ReturnCars.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form_ReturnCars().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton_First;
    private javax.swing.JButton jButton_Last;
    private javax.swing.JButton jButton_Next;
    private javax.swing.JButton jButton_Previous;
    private javax.swing.JButton jButton_confirm_returnment;
    private com.toedter.calendar.JDateChooser jDateChooser_retrunmentDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel_brands_logo;
    private javax.swing.JLabel jLabel_close1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton_with_Damage;
    private javax.swing.JRadioButton jRadioButton_without_Damage;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner_carId;
    private javax.swing.JSpinner jSpinner_damage_Fee;
    private javax.swing.JTable jTable_unavailable_vehicle_;
    private javax.swing.JTextArea jTextArea_Vehicle_report;
    private javax.swing.JTextField jTextField_plateNumber;
    // End of variables declaration//GEN-END:variables
}
